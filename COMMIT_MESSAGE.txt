feat: Implementar sistema de legendas profissionais com Whisper + FFmpeg

üé¨ Sistema completo de legendas estilo TikTok/Shorts com customiza√ß√£o total

## ‚ú® Novidades

### Classe LegendaGenerator separada (legenda_generator.py)
- Nova classe modular e reutiliz√°vel para gera√ß√£o de legendas
- Suporte completo a Whisper (transcri√ß√£o + tradu√ß√£o autom√°tica)
- Renderiza√ß√£o via FFmpeg (formato ASS profissional)
- Timestamps palavra por palavra (estilo karaoke)
- Destaque da palavra atual (highlight_current_word)
- Gerenciamento inteligente de mem√≥ria (carrega/descarrega modelos)

### Par√¢metros customiz√°veis (compat√≠vel com captacity)
- font: Nome ou caminho da fonte (TikTok Sans configurado)
- font_size: Tamanho da fonte (30-150)
- font_color: Cor em hexadecimal
- stroke_width: Largura do contorno
- stroke_color: Cor do contorno
- shadow_strength: Intensidade da sombra
- highlight_current_word: Destaque palavra atual
- word_highlight_color: Cor do destaque
- max_palavras_por_linha: Controle de layout
- padding: Margem inferior

### Integra√ß√£o com pipeline principal
- gerar_lote_v3.py refatorado para usar LegendaGenerator
- Configura√ß√£o via config.json (se√ß√£o "legendas")
- C√≥digo limpo e manuten√≠vel (18 linhas vs 150+ antes)

### Documenta√ß√£o completa
- README_LEGENDAS.md: Guia completo de uso
- GUIA_FONTES_TIKTOK.md: Refer√™ncia de fontes
- config.legendas.exemplo.json: Presets prontos
- RESUMO_IMPLEMENTACAO.md: Documenta√ß√£o t√©cnica
- teste_legenda_generator.py: Script de teste
- teste_fonte_tiktok.py: Teste com TikTok Sans

## üêõ Corre√ß√µes

### Fix: BrokenPipeError com captacity + FFmpeg 7.x
- Problema: MoviePy 1.0.3 incompat√≠vel com FFmpeg moderno
- Solu√ß√£o: Bypass do MoviePy, usando FFmpeg nativo via subprocess
- Resultado: 100% compat√≠vel com FFmpeg 7.x

### Fix: PIL.Image.ANTIALIAS AttributeError
- Problema: Pillow 12.0.0 removeu ANTIALIAS
- Solu√ß√£o: Downgrade para Pillow 9.5.0
- Compatibilidade: MoviePy 1.0.3 + Pillow 9.5.0 + TTS 0.22.0

## üìÅ Arquivos Adicionados

- legenda_generator.py (520 linhas) - Classe principal
- README_LEGENDAS.md - Documenta√ß√£o completa
- GUIA_FONTES_TIKTOK.md - Guia de fontes
- RESUMO_IMPLEMENTACAO.md - Resumo t√©cnico
- config.legendas.exemplo.json - Exemplos de configura√ß√£o
- teste_legenda_generator.py - Script de teste
- teste_fonte_tiktok.py - Teste com TikTok Sans
- COMMIT_MESSAGE.txt - Esta mensagem

## üìù Arquivos Modificados

- gerar_lote_v3.py: Refatorado para usar LegendaGenerator
- config.json: Nova se√ß√£o "legendas" + whisper_model
- requirements.txt: Pillow==9.5.0 (pinned para compatibilidade)

## üéØ Caracter√≠sticas T√©cnicas

- Formato ASS (Advanced SubStation Alpha) profissional
- Suporte a fontes customizadas (TikTok Sans inclu√≠do)
- Modelos Whisper: tiny, base, small, medium, large
- Tradu√ß√£o autom√°tica (qualquer idioma ‚Üí ingl√™s)
- Processamento em lote
- Logs detalhados
- Tratamento robusto de erros

## üöÄ Como Usar

```bash
# Via pipeline principal
python gerar_lote_v3.py

# Standalone
python legenda_generator.py video.mp4 output.mp4 sim

# Como m√≥dulo Python
from legenda_generator import LegendaGenerator
gerador = LegendaGenerator(modelo_whisper='small')
gerador.gerar_legendas(
    arquivo_video_entrada="video.mp4",
    arquivo_video_saida="output.mp4",
    traduzir_para_ingles=True,
    highlight_current_word=True
)
```

## üìä Performance

- Modelo 'small': ~30s para 1 min de v√≠deo (GPU RTX 3060)
- Modelo 'tiny': ~10s para 1 min de v√≠deo (GPU RTX 3060)
- FFmpeg rendering: ~5-10s para 1 min de v√≠deo

## üé® Fonte TikTok Sans

- Fonte oficial do TikTok inclu√≠da
- M√∫ltiplas varia√ß√µes (Bold, ExtraBold, Black, etc)
- Pr√©-configurado no config.json

## üîß Depend√™ncias

- openai-whisper: Transcri√ß√£o autom√°tica
- ffmpeg: Renderiza√ß√£o de v√≠deo
- Pillow==9.5.0: Processamento de imagens (pinned)
- moviepy==1.0.3: Edi√ß√£o de v√≠deo
- TTS==0.22.0: S√≠ntese de voz

## ‚úÖ Testing

- Testado com FFmpeg 7.0.2
- Testado com Python 3.10
- Testado com CUDA 12.1
- Compat√≠vel com v√≠deos verticais (1080x1920) e horizontais (1920x1080)

## üìö Refer√™ncias

- Inspirado em: captacity (unconv)
- Whisper: OpenAI
- FFmpeg: FFmpeg team
- Formato ASS: Advanced SubStation Alpha

---

Breaking Changes: Nenhum
Backward Compatible: Sim
Reviewed-by: N/A
Tested-by: Manual testing

